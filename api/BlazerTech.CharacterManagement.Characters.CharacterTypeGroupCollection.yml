### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  id: CharacterTypeGroupCollection
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterType
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FixedCharacterGroupCollection
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FlexibleCharacterGroupCollection
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.OnCharacterInCollectionChanged
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup
  - BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SuccessfullyInitialized
  langs:
  - csharp
  - vb
  name: CharacterTypeGroupCollection
  nameWithType: CharacterTypeGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  type: Class
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterTypeGroupCollection
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 10
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [Serializable]

      public class CharacterTypeGroupCollection
    content.vb: >-
      <Serializable>

      Public Class CharacterTypeGroupCollection
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterType
  commentId: F:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterType
  id: CharacterType
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: CharacterType
  nameWithType: CharacterTypeGroupCollection.CharacterType
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterType
  type: Field
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CharacterType
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 15
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public LayeredCharacterTypeSO CharacterType
    return:
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public CharacterType As LayeredCharacterTypeSO
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FlexibleCharacterGroupCollection
  commentId: F:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FlexibleCharacterGroupCollection
  id: FlexibleCharacterGroupCollection
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: FlexibleCharacterGroupCollection
  nameWithType: CharacterTypeGroupCollection.FlexibleCharacterGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FlexibleCharacterGroupCollection
  type: Field
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: FlexibleCharacterGroupCollection
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public readonly FlexibleCharacterGroupCollection FlexibleCharacterGroupCollection
    return:
      type: BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroupCollection
    content.vb: Public ReadOnly FlexibleCharacterGroupCollection As FlexibleCharacterGroupCollection
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FixedCharacterGroupCollection
  commentId: F:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FixedCharacterGroupCollection
  id: FixedCharacterGroupCollection
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: FixedCharacterGroupCollection
  nameWithType: CharacterTypeGroupCollection.FixedCharacterGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.FixedCharacterGroupCollection
  type: Field
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: FixedCharacterGroupCollection
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public readonly FixedCharacterGroupCollection FixedCharacterGroupCollection
    return:
      type: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
    content.vb: Public ReadOnly FixedCharacterGroupCollection As FixedCharacterGroupCollection
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.OnCharacterInCollectionChanged
  commentId: E:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.OnCharacterInCollectionChanged
  id: OnCharacterInCollectionChanged
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: OnCharacterInCollectionChanged
  nameWithType: CharacterTypeGroupCollection.OnCharacterInCollectionChanged
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.OnCharacterInCollectionChanged
  type: Event
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: OnCharacterInCollectionChanged
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 21
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public event EventHandler<LayeredCharacter> OnCharacterInCollectionChanged
    return:
      type: System.EventHandler{BlazerTech.CharacterManagement.Characters.LayeredCharacter}
    content.vb: Public Event OnCharacterInCollectionChanged As EventHandler(Of LayeredCharacter)
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup
  commentId: P:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup
  id: SingleCharacterGroup
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: SingleCharacterGroup
  nameWithType: CharacterTypeGroupCollection.SingleCharacterGroup
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: SingleCharacterGroup
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public SingleCharacterGroup SingleCharacterGroup { get; }
    parameters: []
    return:
      type: BlazerTech.CharacterManagement.Characters.SingleCharacterGroup
    content.vb: Public Property SingleCharacterGroup As SingleCharacterGroup
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup*
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SuccessfullyInitialized
  commentId: F:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SuccessfullyInitialized
  id: SuccessfullyInitialized
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: SuccessfullyInitialized
  nameWithType: CharacterTypeGroupCollection.SuccessfullyInitialized
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SuccessfullyInitialized
  type: Field
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: SuccessfullyInitialized
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public readonly bool SuccessfullyInitialized
    return:
      type: System.Boolean
    content.vb: Public ReadOnly SuccessfullyInitialized As Boolean
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  id: '#ctor(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)'
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: CharacterTypeGroupCollection(LayeredCharacterTypeSO)
  nameWithType: CharacterTypeGroupCollection.CharacterTypeGroupCollection(LayeredCharacterTypeSO)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 35
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterTypeGroupCollection(LayeredCharacterTypeSO characterTypeData)
    parameters:
    - id: characterTypeData
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
    content.vb: Public Sub New(characterTypeData As LayeredCharacterTypeSO)
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor*
  nameWithType.vb: CharacterTypeGroupCollection.New(LayeredCharacterTypeSO)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.New(BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO)
  name.vb: New(LayeredCharacterTypeSO)
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  id: '#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)'
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: CharacterTypeGroupCollection(CharacterTypeGroupCollection_DTO)
  nameWithType: CharacterTypeGroupCollection.CharacterTypeGroupCollection(CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 51
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterTypeGroupCollection(CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO DTO)
    parameters:
    - id: DTO
      type: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
    content.vb: Public Sub New(DTO As CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor*
  nameWithType.vb: CharacterTypeGroupCollection.New(CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.New(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO)
  name.vb: New(CharacterTypeGroupCollection_DTO)
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject
  id: GetDataTransferObject
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: GetDataTransferObject()
  nameWithType: CharacterTypeGroupCollection.GetDataTransferObject()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetDataTransferObject
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 80
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO GetDataTransferObject()
    return:
      type: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
    content.vb: Public Function GetDataTransferObject() As CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject*
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty
  id: IsEmpty
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: CharacterTypeGroupCollection.IsEmpty()
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsEmpty
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 82
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty*
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  commentId: M:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  id: NotifyOnCharacterInCollectionChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  parent: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  langs:
  - csharp
  - vb
  name: NotifyOnCharacterInCollectionChanged(LayeredCharacter)
  nameWithType: CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged(LayeredCharacter)
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged(BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: NotifyOnCharacterInCollectionChanged
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 88
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public void NotifyOnCharacterInCollectionChanged(LayeredCharacter character)
    parameters:
    - id: character
      type: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    content.vb: Public Sub NotifyOnCharacterInCollectionChanged(character As LayeredCharacter)
  overload: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged*
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO.html
  name: LayeredCharacterTypeSO
  nameWithType: LayeredCharacterTypeSO
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacterTypeSO
- uid: BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroupCollection
  commentId: T:BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroupCollection
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroupCollection.html
  name: FlexibleCharacterGroupCollection
  nameWithType: FlexibleCharacterGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.FlexibleCharacterGroupCollection
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  commentId: T:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html
  name: FixedCharacterGroupCollection
  nameWithType: FixedCharacterGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
- uid: System.EventHandler{BlazerTech.CharacterManagement.Characters.LayeredCharacter}
  commentId: T:System.EventHandler{BlazerTech.CharacterManagement.Characters.LayeredCharacter}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<LayeredCharacter>
  nameWithType: EventHandler<LayeredCharacter>
  fullName: System.EventHandler<BlazerTech.CharacterManagement.Characters.LayeredCharacter>
  nameWithType.vb: EventHandler(Of LayeredCharacter)
  fullName.vb: System.EventHandler(Of BlazerTech.CharacterManagement.Characters.LayeredCharacter)
  name.vb: EventHandler(Of LayeredCharacter)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
    name: LayeredCharacter
    href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html#BlazerTech_CharacterManagement_Characters_CharacterTypeGroupCollection_SingleCharacterGroup
  name: SingleCharacterGroup
  nameWithType: CharacterTypeGroupCollection.SingleCharacterGroup
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.SingleCharacterGroup
- uid: BlazerTech.CharacterManagement.Characters.SingleCharacterGroup
  commentId: T:BlazerTech.CharacterManagement.Characters.SingleCharacterGroup
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.SingleCharacterGroup.html
  name: SingleCharacterGroup
  nameWithType: SingleCharacterGroup
  fullName: BlazerTech.CharacterManagement.Characters.SingleCharacterGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.#ctor
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html#BlazerTech_CharacterManagement_Characters_CharacterTypeGroupCollection__ctor_BlazerTech_CharacterManagement_Characters_LayeredCharacterTypeSO_
  name: CharacterTypeGroupCollection
  nameWithType: CharacterTypeGroupCollection.CharacterTypeGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection
  nameWithType.vb: CharacterTypeGroupCollection.New
  fullName.vb: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.New
  name.vb: New
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html
  name: CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
  nameWithType: CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
  spec.csharp:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
    name: CharacterTypeGroupCollection
    href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
    name: CharacterTypeGroupCollection_DTO
    href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO.html
  spec.vb:
  - uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
    name: CharacterTypeGroupCollection
    href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO
    name: CharacterTypeGroupCollection_DTO
    href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.CharacterTypeGroupCollection_DTO.html
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html#BlazerTech_CharacterManagement_Characters_CharacterTypeGroupCollection_GetDataTransferObject
  name: GetDataTransferObject
  nameWithType: CharacterTypeGroupCollection.GetDataTransferObject
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.GetDataTransferObject
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html#BlazerTech_CharacterManagement_Characters_CharacterTypeGroupCollection_IsEmpty
  name: IsEmpty
  nameWithType: CharacterTypeGroupCollection.IsEmpty
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.IsEmpty
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html#BlazerTech_CharacterManagement_Characters_CharacterTypeGroupCollection_NotifyOnCharacterInCollectionChanged_BlazerTech_CharacterManagement_Characters_LayeredCharacter_
  name: NotifyOnCharacterInCollectionChanged
  nameWithType: CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.NotifyOnCharacterInCollectionChanged
- uid: BlazerTech.CharacterManagement.Characters.LayeredCharacter
  commentId: T:BlazerTech.CharacterManagement.Characters.LayeredCharacter
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.LayeredCharacter.html
  name: LayeredCharacter
  nameWithType: LayeredCharacter
  fullName: BlazerTech.CharacterManagement.Characters.LayeredCharacter
