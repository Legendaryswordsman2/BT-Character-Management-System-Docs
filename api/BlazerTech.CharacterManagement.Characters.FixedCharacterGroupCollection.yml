### YamlMime:ManagedReference
items:
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  commentId: T:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  id: FixedCharacterGroupCollection
  parent: BlazerTech.CharacterManagement.Characters
  children:
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor(System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO},BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup(System.String,System.Int32)
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup(System.String)
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup(System.String,System.Int32)
  - BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty
  langs:
  - csharp
  - vb
  name: FixedCharacterGroupCollection
  nameWithType: FixedCharacterGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  type: Class
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: FixedCharacterGroupCollection
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 176
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: >-
      [Serializable]

      public class FixedCharacterGroupCollection
    content.vb: >-
      <Serializable>

      Public Class FixedCharacterGroupCollection
  inheritance:
  - System.Object
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups
  commentId: P:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups
  id: FixedCharacterGroups
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: FixedCharacterGroups
  nameWithType: FixedCharacterGroupCollection.FixedCharacterGroups
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups
  type: Property
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: FixedCharacterGroups
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 182
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public IReadOnlyCollection<FixedCharacterGroup> FixedCharacterGroups { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup}
    content.vb: Public ReadOnly Property FixedCharacterGroups As IReadOnlyCollection(Of FixedCharacterGroup)
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups*
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  commentId: M:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  id: '#ctor(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)'
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: FixedCharacterGroupCollection(CharacterTypeGroupCollection)
  nameWithType: FixedCharacterGroupCollection.FixedCharacterGroupCollection(CharacterTypeGroupCollection)
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroupCollection(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 184
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public FixedCharacterGroupCollection(CharacterTypeGroupCollection attachedGroupsCollection)
    parameters:
    - id: attachedGroupsCollection
      type: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
    content.vb: Public Sub New(attachedGroupsCollection As CharacterTypeGroupCollection)
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor*
  nameWithType.vb: FixedCharacterGroupCollection.New(CharacterTypeGroupCollection)
  fullName.vb: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.New(BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  name.vb: New(CharacterTypeGroupCollection)
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor(System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO},BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  commentId: M:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor(System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO},BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  id: '#ctor(System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO},BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)'
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: FixedCharacterGroupCollection(List<FixedCharacterGroup_DTO>, CharacterTypeGroupCollection)
  nameWithType: FixedCharacterGroupCollection.FixedCharacterGroupCollection(List<FixedCharacterGroup.FixedCharacterGroup_DTO>, CharacterTypeGroupCollection)
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroupCollection(System.Collections.Generic.List<BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO>, BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  type: Constructor
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: .ctor
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 189
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public FixedCharacterGroupCollection(List<FixedCharacterGroup.FixedCharacterGroup_DTO> DTOs, CharacterTypeGroupCollection attachedGroupsCollection)
    parameters:
    - id: DTOs
      type: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO}
    - id: attachedGroupsCollection
      type: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
    content.vb: Public Sub New(DTOs As List(Of FixedCharacterGroup.FixedCharacterGroup_DTO), attachedGroupsCollection As CharacterTypeGroupCollection)
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor*
  nameWithType.vb: FixedCharacterGroupCollection.New(List(Of FixedCharacterGroup.FixedCharacterGroup_DTO), CharacterTypeGroupCollection)
  fullName.vb: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.New(System.Collections.Generic.List(Of BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO), BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection)
  name.vb: New(List(Of FixedCharacterGroup_DTO), CharacterTypeGroupCollection)
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup(System.String,System.Int32)
  commentId: M:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup(System.String,System.Int32)
  id: GetOrCreateGroup(System.String,System.Int32)
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: GetOrCreateGroup(string, int)
  nameWithType: FixedCharacterGroupCollection.GetOrCreateGroup(string, int)
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup(string, int)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetOrCreateGroup
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 198
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public FixedCharacterGroup GetOrCreateGroup(string groupName, int newGroupSize)
    parameters:
    - id: groupName
      type: System.String
    - id: newGroupSize
      type: System.Int32
    return:
      type: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    content.vb: Public Function GetOrCreateGroup(groupName As String, newGroupSize As Integer) As FixedCharacterGroup
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup*
  nameWithType.vb: FixedCharacterGroupCollection.GetOrCreateGroup(String, Integer)
  fullName.vb: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup(String, Integer)
  name.vb: GetOrCreateGroup(String, Integer)
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup(System.String)
  commentId: M:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup(System.String)
  id: GetGroup(System.String)
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: GetGroup(string)
  nameWithType: FixedCharacterGroupCollection.GetGroup(string)
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup(string)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: GetGroup
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 208
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public FixedCharacterGroup GetGroup(string groupName)
    parameters:
    - id: groupName
      type: System.String
    return:
      type: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    content.vb: Public Function GetGroup(groupName As String) As FixedCharacterGroup
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup*
  nameWithType.vb: FixedCharacterGroupCollection.GetGroup(String)
  fullName.vb: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup(String)
  name.vb: GetGroup(String)
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup(System.String,System.Int32)
  commentId: M:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup(System.String,System.Int32)
  id: CreateGroup(System.String,System.Int32)
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: CreateGroup(string, int)
  nameWithType: FixedCharacterGroupCollection.CreateGroup(string, int)
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup(string, int)
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: CreateGroup
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 210
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public FixedCharacterGroup CreateGroup(string groupName, int size)
    parameters:
    - id: groupName
      type: System.String
    - id: size
      type: System.Int32
    return:
      type: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    content.vb: Public Function CreateGroup(groupName As String, size As Integer) As FixedCharacterGroup
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup*
  nameWithType.vb: FixedCharacterGroupCollection.CreateGroup(String, Integer)
  fullName.vb: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup(String, Integer)
  name.vb: CreateGroup(String, Integer)
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty
  commentId: M:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty
  id: IsEmpty
  parent: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: FixedCharacterGroupCollection.IsEmpty()
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty()
  type: Method
  source:
    remote:
      path: Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
      branch: main
      repo: https://github.com/Legendaryswordsman2/BlazerTech-Character-Management-System.git
    id: IsEmpty
    path: ../../../Unity/Unity Projects/BlazerTech Character Management System/Assets/BlazerTech Character Management System/Scripts/Core/Characters/Layered Characters/Character Groups/CharacterGroupCollections.cs
    startLine: 227
  assemblies:
  - Assembly-CSharp
  namespace: BlazerTech.CharacterManagement.Characters
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty() As Boolean
  overload: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty*
references:
- uid: BlazerTech.CharacterManagement.Characters
  commentId: N:BlazerTech.CharacterManagement.Characters
  href: BlazerTech.html
  name: BlazerTech.CharacterManagement.Characters
  nameWithType: BlazerTech.CharacterManagement.Characters
  fullName: BlazerTech.CharacterManagement.Characters
  spec.csharp:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
  spec.vb:
  - uid: BlazerTech
    name: BlazerTech
    href: BlazerTech.html
  - name: .
  - uid: BlazerTech.CharacterManagement
    name: CharacterManagement
    href: BlazerTech.CharacterManagement.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters
    name: Characters
    href: BlazerTech.CharacterManagement.Characters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html#BlazerTech_CharacterManagement_Characters_FixedCharacterGroupCollection_FixedCharacterGroups
  name: FixedCharacterGroups
  nameWithType: FixedCharacterGroupCollection.FixedCharacterGroups
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroups
- uid: System.Collections.Generic.IReadOnlyCollection{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<FixedCharacterGroup>
  nameWithType: IReadOnlyCollection<FixedCharacterGroup>
  fullName: System.Collections.Generic.IReadOnlyCollection<BlazerTech.CharacterManagement.Characters.FixedCharacterGroup>
  nameWithType.vb: IReadOnlyCollection(Of FixedCharacterGroup)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of BlazerTech.CharacterManagement.Characters.FixedCharacterGroup)
  name.vb: IReadOnlyCollection(Of FixedCharacterGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    name: FixedCharacterGroup
    href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    name: FixedCharacterGroup
    href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.#ctor
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html#BlazerTech_CharacterManagement_Characters_FixedCharacterGroupCollection__ctor_BlazerTech_CharacterManagement_Characters_CharacterTypeGroupCollection_
  name: FixedCharacterGroupCollection
  nameWithType: FixedCharacterGroupCollection.FixedCharacterGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.FixedCharacterGroupCollection
  nameWithType.vb: FixedCharacterGroupCollection.New
  fullName.vb: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.New
  name.vb: New
- uid: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  commentId: T:BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection.html
  name: CharacterTypeGroupCollection
  nameWithType: CharacterTypeGroupCollection
  fullName: BlazerTech.CharacterManagement.Characters.CharacterTypeGroupCollection
- uid: System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO}
  commentId: T:System.Collections.Generic.List{BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FixedCharacterGroup.FixedCharacterGroup_DTO>
  nameWithType: List<FixedCharacterGroup.FixedCharacterGroup_DTO>
  fullName: System.Collections.Generic.List<BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO>
  nameWithType.vb: List(Of FixedCharacterGroup.FixedCharacterGroup_DTO)
  fullName.vb: System.Collections.Generic.List(Of BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO)
  name.vb: List(Of FixedCharacterGroup.FixedCharacterGroup_DTO)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    name: FixedCharacterGroup
    href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO
    name: FixedCharacterGroup_DTO
    href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
    name: FixedCharacterGroup
    href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html
  - name: .
  - uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO
    name: FixedCharacterGroup_DTO
    href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.FixedCharacterGroup_DTO.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html#BlazerTech_CharacterManagement_Characters_FixedCharacterGroupCollection_GetOrCreateGroup_System_String_System_Int32_
  name: GetOrCreateGroup
  nameWithType: FixedCharacterGroupCollection.GetOrCreateGroup
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetOrCreateGroup
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
  commentId: T:BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
  parent: BlazerTech.CharacterManagement.Characters
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup.html
  name: FixedCharacterGroup
  nameWithType: FixedCharacterGroup
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroup
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html#BlazerTech_CharacterManagement_Characters_FixedCharacterGroupCollection_GetGroup_System_String_
  name: GetGroup
  nameWithType: FixedCharacterGroupCollection.GetGroup
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.GetGroup
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html#BlazerTech_CharacterManagement_Characters_FixedCharacterGroupCollection_CreateGroup_System_String_System_Int32_
  name: CreateGroup
  nameWithType: FixedCharacterGroupCollection.CreateGroup
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.CreateGroup
- uid: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty*
  commentId: Overload:BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty
  href: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.html#BlazerTech_CharacterManagement_Characters_FixedCharacterGroupCollection_IsEmpty
  name: IsEmpty
  nameWithType: FixedCharacterGroupCollection.IsEmpty
  fullName: BlazerTech.CharacterManagement.Characters.FixedCharacterGroupCollection.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
